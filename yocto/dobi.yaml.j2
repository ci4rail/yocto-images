---
{% for image in image_list %}
  {% set image_name = image["name"] %}
  {% set image_pattern = image["image_pattern"] %}

# ===================================================
# jobs for {{ image_name }}
# ===================================================
job={{image_name}}-gen-image-version:
  use: image-kas
  depends:
    - yocto-envs
    - yocto-layer-revparse
  mounts:
    - mount-buildingblock-gitversion-source-dir
  sources: yocto/layer-revs
  artifact: /git/yocto/.generated-{{image_name}}-image-naming.yaml
  user: "{user.uid}:{user.gid}"
  env:
    - "USER={user.name}"
  entrypoint: /bin/bash
  command: /git/gen-image-version.sh
    /git
    /git/yocto/layer-revs
    {{image_name}}
    /git/yocto/.generated-{{image_name}}-image-naming.yaml

# Warning: MENDER_ARTIFACT_NAME and IMAGE_GIT_VERSION are
# set to the default values in kasfile-default-image-naming.yaml
# because it is unknown what image type you'll build in the shell
job={{image_name}}-yocto-shell:
  use: image-kas
  depends:
    - yocto-envs
  mounts:
    - build-dir-yocto
    - repo-dir-yocto
    - download-dir-yocto
    - sstate-dir-yocto
    - install-dir-yocto
  working-dir: /work
  interactive: true
  env:
    - USER_ID={user.uid}
    - GROUP_ID={user.gid}
    - TERM=xterm-256color
    - SHELL=/bin/bash
    - MENDER_SERVER_URL={env.MENDER_SERVER_URL}
    - MENDER_TENANT_TOKEN={env.MENDER_TENANT_TOKEN}
    - IMAGE_NAME_SUFFIX={env.IMAGE_NAME_SUFFIX}
  command: "shell /repo/kasfile-{{image_name}}.yaml"
  annotations:
    description: "\t\t--> interactive yocto shell {{image_name}} config"

job={{image_name}}-build-image:
  use: image-kas
  mounts:
    - build-dir-yocto
    - repo-dir-yocto
    - download-dir-yocto
    - sstate-dir-yocto
    - install-dir-yocto
  working-dir: /work
  interactive: true
  env:
    - USER_ID={user.uid}
    - GROUP_ID={user.gid}
    - TERM=xterm-256color
    - SHELL=/bin/bash
    - MENDER_SERVER_URL={env.MENDER_SERVER_URL}
    - MENDER_TENANT_TOKEN={env.MENDER_TENANT_TOKEN}
    - IMAGE_NAME_SUFFIX={env.IMAGE_NAME_SUFFIX}
  depends:
    - {{image_name}}-gen-image-version
  sources:
    - yocto/kasfile-{{image_name}}.yaml
    - yocto/kasfile-tdxbsp.yaml
    - yocto/kasfile-mender.yaml
  command: "build /repo/kasfile-{{image_name}}.yaml:.generated-{{image_name}}-image-naming.yaml"
  annotations:
    description: "\t\t--> Build {{image_name}}-image"

job={{image_name}}-mender-upload:
  use: image-mender-cli
  interactive: true
  mounts:
    - install-dir-yocto
    - mender-auth-dir
  user: "{user.uid}:{user.gid}"
  entrypoint: /bin/sh
  command: -c "/mender-cli --token=/mender-auth/authtoken artifacts upload /install/images/{{image_pattern}}"
  annotations:
    description: "\t\t--> Upload {{image_name}} image to mender"

job={{image_name}}-mender-deploy:
  use: image-curl-jq
  mounts:
    - install-dir-yocto
    - scripts-dir
    - mender-auth-dir
  user: "{user.uid}:{user.gid}"
  env:
    - MENDER_DEVICE_ID={env.MENDER_DEVICE_ID}
    - MENDER_AUTH_TOKEN=/mender-auth/authtoken
  command: /scripts/mender_deploy_artifact_to_device.sh /install/images/{{image_pattern}}
  annotations:
    description: "\t\t--> Deploy {{image_name}} image to MENDER_DEVICE_ID"
{% endfor %}

alias=build-yocto-all:
  tasks:
  {% for image in image_list %}
    {% set image_name = image["name"] %}
    - {{image_name}}-build-image
  {% endfor %}
  annotations:
    description: "\t\t\t--> [alias]build all images in yocto folder"
