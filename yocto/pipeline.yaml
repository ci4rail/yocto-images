---
resources:
  # S3 buckets
  - name: s3-tezi-file
    type: s3
    source:
      bucket: ((name))
      regexp: (.*).mender_tezi.tar
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      endpoint: ((s3_endpoint))
      disable_ssl: ((s3_skip_ssl_verification))

  - name: s3-mender-artifact
    type: s3
    source:
      bucket: ((name))
      regexp: (.*).mender
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      endpoint: ((s3_endpoint))
      disable_ssl: ((s3_skip_ssl_verification))

  # Git sources
  - name: source
    type: git
    source:
      uri: ((git_source))
      private_key: ((privatekey))
      branch: ((git_branch))
      paths: ((git_paths))
      # TODO: git_tag_rexex
      skip_ssl_verification: ((git_skip_ssl_verification))

jobs:
  - name: build
    public: true
    plan:
      - get: source
        trigger: true

      - task: generate-version
        file: source/yocto/ci/task_cfg_generate_version.yaml
        vars:
          source: source

      - task: build-tezi-file
        file: source/yocto/ci/task_cfg_build_tezi_file.yaml
        vars:
          name: ((name))
          source: source
          MENDER_SERVER_URL: ((MENDER_SERVER_URL))
          MENDER_TENANT_TOKEN: ((MENDER_TENANT_TOKEN))
          MENDER_ARTIFACT_DEV_SUFFIX: ((MENDER_ARTIFACT_DEV_SUFFIX))
          IMAGE_NAME_SUFFIX: ((IMAGE_NAME_SUFFIX))

      - task: mender-upload
        file: source/yocto/ci/task_cfg_mender_upload.yaml
        vars:
          HOSTED_MENDER_USER_EMAIL: ((HOSTED_MENDER_USER_EMAIL))
          HOSTED_MENDER_PASSWORD: ((HOSTED_MENDER_PASSWORD))

      - put: s3-tezi-file
        params:
          file: install/*.mender_tezi.tar
          acl: public-read

      - put: s3-mender-artifact
        params:
          file: install/*.mender
          acl: public-read

      - task: mender-upload
        file: source/yocto/ci/task_cfg_mender_upload.yaml
