---
resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: pull-request
    type: pull-request
    check_every: 30s
    webhook_token: ((webhook_token))
    source:
      repository: ci4rail/ci.os.lmp
      access_token: ((access_token))
      paths: [yocto]
      ignore_paths: ["yocto/ci"]

  # S3 buckets
  - name: s3-tezi-file
    type: s3
    source:
      bucket: ((name))-pr
      regexp: (.*)-pr.mender_tezi.tar
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      endpoint: ((s3_endpoint))
      disable_ssl: ((s3_skip_ssl_verification))

  - name: s3-test-results
    type: s3
    source:
      bucket: ((name))-pr
      regexp: log-(.*).html
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      endpoint: ((s3_endpoint))
      disable_ssl: ((s3_skip_ssl_verification))

  - name: testscript-source
    type: git
    source:
      uri: ((testscript_source_repo))
      private_key: ((privatekey))
      branch: ((testscript_source_branch))
      paths:
        - .
      skip_ssl_verification: false

jobs:
  - name: build-and-test
    public: true
    plan:
      - get: pull-request
        trigger: true
        version: every

      - put: pull-request
        params:
          path: pull-request
          status: pending

      - task: generate-version
        file: pull-request/yocto/ci/task_cfg_generate_version.yaml
        vars:
          source: pull-request

      - task: build-tezi-file
        file: pull-request/yocto/ci/task_cfg_build_tezi_file.yaml
        vars:
          name: ((name))
          source: pull-request
          MENDER_SERVER_URL: ((MENDER_SERVER_URL))
          MENDER_TENANT_TOKEN: ((MENDER_TENANT_TOKEN))
          MENDER_ARTIFACT_DEV_SUFFIX: -pr
          IMAGE_NAME_SUFFIX: -pr

      - put: s3-tezi-file
        params:
          file: install/*.mender_tezi.tar
          acl: public-read

      - get: testscript-source

      - task: run-edgefarm-image-test
        file: pull-request/yocto/ci/task_cfg_image_test.yaml
        vars:
          image_dir: install
          privatekey: ((privatekey))
          name: ((name))
          robot_tc_ip: ((robot_tc_ip))
          robot_tc_user: ((robot_tc_user))
          robot_wifi_ap: ((robot_wifi_ap))
          robot_wifi_pass: ((robot_wifi_pass))
          robot_lte_apn: ((robot_lte_apn))
        ensure:
          put: s3-test-results
          params:
            file: results/log-*.html
            acl: public-read

      - put: pull-request
        params:
          path: pull-request
          status: success
    on_failure:
      put: pull-request
      params:
        path: pull-request
        status: failure
