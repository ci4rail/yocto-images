name: Base Image on pull request
on:
  pull_request:
    branches:
      - main
    paths:
      - "base/kasfile-cpu01-base.yaml"
      - "kas-includes/**"
      - ".github/workflows/base-pull-request.yaml"

env:
  NAME: cpu01-base
  # The mender artifact name suffix
  MENDER_ARTIFACT_DEV_SUFFIX: -testing
  # The tezi file name suffix
  IMAGE_NAME_SUFFIX: -testing
  SOURCE: ci.os.lmp
  BUILDER_IMAGE: ghcr.io/siemens/kas/kas:2.3.3
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  calculate-version:
    name: Calculate Version
    # Currently not working with Ubuntu 20.04
    runs-on: ubuntu-18.04
    outputs:
      #0.1.0-36.cleanup.e3132eb42a917c62b1f9198def62e78a4346c35d
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}-${{ steps.gitversion.outputs.commitsSinceVersionSource }}.{{ github.event.pull_request.head.ref }}.$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-8`)
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

  build-image:
    needs: calculate-version
    runs-on: self-hosted
    steps:
      - name: Cache for Yocto Builds
        uses: actions/cache@v2
        env:
          cache-name: yocto-cache
        with:
          path: |
            ~/downloads
            ~/sstate
          key: yocto-cache

      - name: Log into Docker
        run: echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} --password-stdin

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-8`" >> $GITHUB_ENV

      - name: Delete test file
        run: rm ~/downloads/test.txt
      # - name: Build Yocto
      #   env:
      #     IMAGE_GIT_VERSION: ${SHORT_SHA}
      #     BRANCH_VERSION: branchName.${SHORT_SHA}
      #     MENDER_ARTIFACT_NAME: ${NAME}-$(cat gitversion/plain/BranchVersion)${MENDER_ARTIFACT_DEV_SUFFIX}
      #   run: |
      #     docker run ${BUILDER_IMAGE} \
      #           -v ~/install:/install \
      #           -v ~/sstate:/sstate \
      #           -v ~/downloads:/downloads \
      #           -v ~/${SOURCE}:/builder \
      #           build kasfile-${NAME}.yaml

      # - name: Check Build Artefacts are there
      #   run: |
      #     ls -al ~/install/images/*/*CI.OS.LMP*.mender_tezi.tar
      #     ls -al ~/install/images/*/*CI.OS.LMP*.mender

      - name: Display SemVer
        run: |
          echo "BranchName ${{ needs.calculate-version.outputs.version }} branch."
          lsb_release -a

  integrationtest:
    # Run when job build-image is finished
    needs: build-image
    runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
