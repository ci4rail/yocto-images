header:
  version: 11
  # includes:
  #   - ../kas-includes/kasfile-general.yaml
  #   - ../kas-includes/kasfile-tdxbsp.yaml
  #   - ../kas-includes/kasfile-mender.yaml
  #   - ../kas-includes/kasfile-docker.yaml

# The machine as it is written into the `local.conf` of bitbake.
# machine: raspberrypi4
machine: raspberrypi4-64
# The distro name as it is written into the `local.conf` of bitbake.
distro: poky
# The target that is built by bitbake
target: core-image-base

repos:
  # edgefarm
  # src/meta-edgefarm:
  #   url: https://github.com/edgefarm/meta-edgefarm.git
  #   refspec: kubeedge
  #   layers:
  #     meta-edgefarm-core:
  #     meta-edgefarm-devtools:

  src/bitbake:
    url: "https://github.com/openembedded/bitbake.git"
    refspec: da306cd4430a6fcf6b62ed0e6e5310432aa4c4c4
    layers:
      # bitbake is no layer. Exclude it from bblayers.conf
      bitbake: "no"

  src/poky:
    url: "https://git.yoctoproject.org/poky"
    refspec: bba323389749ec3e306509f8fb12649f031be152
    layers:
      meta-poky:
      meta-yocto-bsp:
      meta:

  src/meta-openembedded:
    url: "https://github.com/openembedded/meta-openembedded.git"
    refspec: ab9fca485e13f6f2f9761e1d2810f87c2e4f060a
    layers:
      meta-oe:
      meta-python:
      meta-networking:
      meta-multimedia:

  src/meta-mender:
    url: "https://github.com/mendersoftware/meta-mender"
    refspec: 5b518cc7cf4c6fb9d17fbbb463df3ccd70a9936a
    layers:
      meta-mender-core:
      meta-mender-raspberrypi:
      meta-mender-demo:

  src/meta-raspberrypi:
    url: "https://github.com/agherzan/meta-raspberrypi"
    refspec: 934064a01903b2ba9a82be93b3f0efdb4543a0e8

bblayers_conf_header:
  src/meta-custom: |
    BBPATH = "${TOPDIR}"
    BBFILES ?= ""
    POKY_BBLAYERS_CONF_VERSION = "2"

local_conf_header:
  src/meta-custom: |
    DL_DIR ?= "/downloads"
    SSTATE_DIR ?= "/sstate-cache"
    DEPLOY_DIR = "/install"
    PACKAGE_CLASSES ?= "package_rpm"
    EXTRA_IMAGE_FEATURES ?= "debug-tweaks"

    USER_CLASSES ?= "buildstats image-mklibs image-prelink"
    PATCHRESOLVE = "noop"

    BB_DISKMON_DIRS ??= "\
        STOPTASKS,${TMPDIR},1G,100K \
        STOPTASKS,${DL_DIR},1G,100K \
        STOPTASKS,${SSTATE_DIR},1G,100K \
        STOPTASKS,/tmp,100M,100K \
        ABORT,${TMPDIR},100M,1K \
        ABORT,${DL_DIR},100M,1K \
        ABORT,${SSTATE_DIR},100M,1K \
        ABORT,/tmp,10M,1K"
    PACKAGECONFIG_append_pn-qemu-system-native = " sdl"
    INHERIT += "rm_work"

    INHERIT += "mender-full"

    # DISTRO_FEATURES_append = " systemd"
    # VIRTUAL-RUNTIME_init_manager = "systemd"
    # DISTRO_FEATURES_BACKFILL_CONSIDERED = "sysvinit"
    # VIRTUAL-RUNTIME_initscripts = ""

    RPI_USE_U_BOOT = "1"
    IMAGE_INSTALL_append = " kernel-image kernel-devicetree"
    IMAGE_FSTYPES_remove += " rpi-sdimg"

    MENDER_FEATURES_ENABLE_append = " mender-uboot mender-image-sd"
    MENDER_FEATURES_DISABLE_append = " mender-grub mender-image-uefi"

    ENABLE_UART = "1"
    # boot + 2xroot partition must fit in MENDER_STORAGE_TOTAL_SIZE_MB
    # Keep it as small as possible, to reduce target programming time
    # Reduce size in devtools image
    MENDER_STORAGE_TOTAL_SIZE_MB = "2000"
    MENDER_BOOT_PART_SIZE_MB = "40"

    # New changes done by me
    ################################################################
    IMAGE_FEATURES += "\
                      ssh-server-openssh \
                      "
    IMAGE_LINGUAS = "en-us"
    # Copy Licenses to image /usr/share/common-license
    COPY_LIC_MANIFEST ?= "1"
    COPY_LIC_DIRS ?= "1"
  # IMAGE_INSTALL += "\
  #               udev-extraconf \
  #               bzip2 \
  #               e2fsprogs \
  #               e2fsprogs-resize2fs \
  #               e2fsprogs-tune2fs \
  #               ethtool \
  #               gpsd \
  #               grep \
  #               lsof \
  #               minicom \
  #               pciutils \
  #               procps \
  #               libusbgx \
  #               sqlite3 \
  #               rng-tools \
  #               util-linux \
  #               networkmanager \
  #               modemmanager \
  #               chrony \
  #               chronyc \
  #               python3-pyserial \
  #               nano \
  #             "
  # IMAGE_FEATURES += "\
  #                package-management \
  #                "
  # IMAGE_INSTALL += "\
  #               edgecore"
  # IMAGE_INSTALL += "\
  #                tailscale \
  #                jq \
  #                yq \
  #                bind-utils \
  #                termshark \
  #                nats \
  #                "

env:
  MENDER_SERVER_URL: "https://hosted.mender.io"
  MENDER_TENANT_TOKEN: "DEFAULT_EMPTY_TENANT_TOKEN"
  IMAGE_NAME_SUFFIX: ""
  MENDER_ARTIFACT_NAME: "DEFAULT_EMPTY_ARTIFACT_NAME"
